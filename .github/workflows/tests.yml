name: Tests

on:
  pull_request:
    branches: [ master, main ]
  push:
    branches: [ master, main ]

env:
  # Environment variables for testing
  SECRET_KEY: "test-super-long-secret-key-with-many-unique-characters-for-github-actions-12345"
  DEBUG: "True"
  ALLOWED_HOSTS: "localhost,127.0.0.1"
  DATABASE_URL: "postgresql://postgres:postgres@localhost:5432/creditmate_test"

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [3.12]

    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: creditmate_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/Pipfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install pipenv
      run: |
        python -m pip install --upgrade pip
        pip install pipenv

    - name: Install dependencies
      run: |
        pipenv install --dev --system

    - name: Check for missing migrations
      run: |
        python manage.py makemigrations --dry-run --check

    - name: Run migrations
      run: |
        python manage.py migrate

    - name: Run tests with coverage
      run: |
        pytest --cov=banks --cov=credit_cards --cov=common --cov-report=xml --cov-report=term-missing

    - name: Upload coverage reports to Codecov
      if: matrix.python-version == '3.12'
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

    - name: Run Django system checks
      run: |
        python manage.py check

    - name: Test static files collection
      run: |
        python manage.py collectstatic --noinput
